user root;

worker_processes 4;

pid /var/snap/platform/common/log/nginx_public.pid;
error_log syslog:server=unix:/dev/log warn;

events {
    worker_connections 1024;
}

http {
    server_names_hash_bucket_size 64;
    map $request_uri $not_static {
        default                                             1;
        ~*\.(ico|css|js|gif|jpg|jpeg|png|svg|woff|woff2|ttf|eot|txt)$ 0;
    }
    access_log syslog:server=unix:/dev/log combined if=$not_static;

    client_body_temp_path /var/snap/platform/current/nginx/public_client_body_temp;
    proxy_temp_path /var/snap/platform/current/nginx/public_proxy_temp;
    fastcgi_temp_path /var/snap/platform/current/nginx/public_fastcgi_temp;
    uwsgi_temp_path /var/snap/platform/current/nginx/public_uwsgi_temp;
    scgi_temp_path /var/snap/platform/current/nginx/public_scgi_temp;
    include /snap/platform/current/nginx/etc/nginx/mime.types;

    client_max_body_size 10G;
    proxy_send_timeout 600s;
    proxy_read_timeout 600s;

    #less slow sd card io
    proxy_buffering off;

  # internal ui redirect for backwards compatibility
  server {

    listen 81 default_server;
    listen [::]:81 default_server;

    server_name _;

    root /snap/platform/current/www;

    location /rest/id {
        proxy_pass      http://unix:/var/snap/platform/current/backend.sock: ;
    }
    
    location / {
        return 301 https://$host$request_uri;
    }
  }

  # device ui
  server {

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_name {{ domain }};
    
    ssl_certificate     /var/snap/platform/current/syncloud.crt;
    ssl_certificate_key /var/snap/platform/current/syncloud.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    # ssl_ciphers         ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK;
    ssl_prefer_server_ciphers on;

    root /snap/platform/current/www;
    index index.html;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
    add_header 'Access-Control-Allow-Origin' '*';

    location /rest {
        proxy_pass      http://unix:/var/snap/platform/current/backend.sock: ;
    }

    location /ping {
        return 200 "OK";
    }

    location / {
      try_files $uri $uri/ /index.html;
    }

  }
    
  # auth
  server {

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_name auth.{{ domain }};
    
    ssl_certificate     /var/snap/platform/current/syncloud.crt;
    ssl_certificate_key /var/snap/platform/current/syncloud.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    # ssl_ciphers         ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK;
    ssl_prefer_server_ciphers on;

    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
    add_header 'Access-Control-Allow-Origin' '*';

    
    set $upstream http://unix:/var/snap/platform/current/authelia.socket: ;

    location / {
        include /snap/platform/current/config/authelia/proxy.conf;
        proxy_pass $upstream;
    }

    location = /api/verify {
        proxy_pass $upstream;
    }

    location /api/authz/ {
        proxy_pass $upstream;
    }

  }

  # apps proxy
  server {
  
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_name ~^(.*\.)?(?P<app>.*)\.{{ domain_regex }}$;
    
    ssl_certificate     /var/snap/platform/current/syncloud.crt;
    ssl_certificate_key /var/snap/platform/current/syncloud.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    # ssl_ciphers         ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK;
    ssl_prefer_server_ciphers on;

    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    location / {
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_pass      http://unix:/var/snap/$app/common/web.socket: ;
        proxy_redirect  http://unix:/var/snap/$app/common/web.socket: $scheme://$http_host ;
    }
  }

}


