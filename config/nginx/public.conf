user root;

worker_processes 4;

pid {{ app_data }}/log/nginx_public.pid;
error_log {{ app_data }}/log/nginx_public_error.log warn;

events {
    worker_connections 1024;
}

http {
    server_names_hash_bucket_size 64;
    access_log {{ app_data }}/log/nginx_public_access.log;

    client_body_temp_path {{ app_data }}/nginx/public_client_body_temp;
    proxy_temp_path {{ app_data }}/nginx/public_proxy_temp;
    fastcgi_temp_path {{ app_data }}/nginx/public_fastcgi_temp;
    uwsgi_temp_path {{ app_data }}/nginx/public_uwsgi_temp;
    scgi_temp_path {{ app_data }}/nginx/public_scgi_temp;

    include {{ app_dir }}/nginx/conf/mime.types;
    
    client_max_body_size 10G;

    uwsgi_read_timeout 600s;
    proxy_send_timeout 600s;
    proxy_read_timeout 600s;

    #less slow sd card io
    proxy_buffering off;

  # internal ui redirect for backwards compatibility
  server {

    listen 81 default_server;
    listen [::]:81 default_server;

    server_name _;

    root {{ app_dir }}/www;

    location /rest/id {
        include {{ config_root }}/config/uwsgi/uwsgi_params;
        uwsgi_pass unix://{{ config_root }}/config/uwsgi/socket/public.wsgi.sock;
    }
    
    location / {
        return 301 https://$host$request_uri;
    }
  }

  # certificate validation
  server {

    listen 80 default_server;
    listen [::]:80 default_server;

    server_name _;

    root {{ app_dir }}/www;

    #certbot auth dir
    location /.well-known/acme-challenge {
        alias {{ app_data }}/certbot/www/.well-known/acme-challenge;
    }

    location /ping {
        return 200 "OK";
    }

    location / {
        return 301 https://$host$request_uri;
    }

  }

  # device ui
  server {

    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_name {{ '{{' }} user_domain {{ '}}' }};
    
    ssl_certificate     {{ app_data }}/syncloud.crt;
    ssl_certificate_key {{ app_data }}/syncloud.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    root {{ app_dir }}/www;
    index index.html;
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";
    add_header 'Access-Control-Allow-Origin' '*';

    location /rest {
        include {{ config_root }}/config/uwsgi/uwsgi_params;
        uwsgi_pass unix://{{ config_root }}/config/uwsgi/socket/public.wsgi.sock;
    }

    location /appsimages {
        alias {{ apps_root }}/images;
    }

    location /ping {
        return 200 "OK";
    }

  }
  
  # apps proxy
  server {
  
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    
    server_name ~^(?P<app>.*)\.{{ '{{' }} user_domain | replace(".", "\.") {{ '}}' }}$;
    
    ssl_certificate     {{ app_data }}/syncloud.crt;
    ssl_certificate_key {{ app_data }}/syncloud.key;
    ssl_protocols       TLSv1.2 TLSv1.3;
    ssl_ciphers         ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains";

    location / {
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        proxy_pass      http://unix:{{ data_root }}/$app/{{ app_data_prefix }}web.socket: ;
        proxy_redirect  http://unix:{{ data_root }}/$app/{{ app_data_prefix }}web.socket: $scheme://$http_host ;
    }
  }

}
